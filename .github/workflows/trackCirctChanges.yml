name: Track CIRCT Changes
on:
  schedule:
    # 13:00 (1PM) UTC is 5AM Pacific, or a few hours before the workday starts
    - cron: '0 13 * * *'
  # Run this workflow on pull requests which change this workflow
  pull_request: 
    paths:
      - .github/workflows/trackCirctChanges.yml
  # Allow running manually
  workflow_dispatch:

jobs:
  track-circt:
    name: Track CIRCT Changes
    runs-on: ubuntu-22.04
    container: swiftlang/swift:nightly-main-jammy
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y git clang ninja-build cmake
      - name: Checkout CIRCT
        run: |
          git clone https://github.com/llvm/circt
          cd circt
          git remote add -f george https://github.com/GeorgeLyon/circt
      - name: Cherry-pick relevant CIRCT commits
        run: |
          cd circt
          git config user.email "robot"
          git config user.name "robot"
          if git cherry-pick $(git merge-base HEAD remotes/george/dev/george/swift-bindings)..remotes/george/dev/george/swift-bindings ; then
            echo "No conflicts."
          else
            git checkout HEAD -- llvm 
          fi
          until git cherry-pick --continue --no-edit ; do
            git checkout HEAD -- llvm
          done
      - name: Check out LLVM
        run: |
          cd circt
          git submodule update --init
          cd llvm 
          git remote add -f george https://github.com/GeorgeLyon/llvm-project
      - name: Cherry-pick relevant LLVM commits
        run: | 
          cd circt/llvm
          git config user.email "robot"
          git config user.name "robot"
          git cherry-pick $(git merge-base HEAD remotes/george/dev/george/swift-interop)..remotes/george/dev/george/swift-interop
      # - name: Install custom modulemap for libstdc++
      #   run: |
      #     cp libstdcxx.modulemap /usr/include/c++/12/module.modulemap
      - name: Check circt-swift-bindings-test
        run: |
          swift --version
          mkdir build
          cmake \
            -DCMAKE_C_COMPILER=clang \
            -DCMAKE_CXX_COMPILER=clang++ \
            -DLLVM_ENABLE_ASSERTIONS=ON \
            -DLLVM_ENABLE_PROJECTS=mlir \
            -DLLVM_TARGETS_TO_BUILD=host \
            -DLLVM_BUILD_EXAMPLES=OFF \
            -DLLVM_ENABLE_OCAMLDOC=OFF \
            -DLLVM_ENABLE_BINDINGS=OFF \
            -DLLVM_ENABLE_MODULES=OFF \
            -DLLVM_OPTIMIZED_TABLEGEN=ON \
            -DLLVM_USE_SPLIT_DWARF=ON \
            -DLLVM_CCACHE_BUILD=OFF \
            -DLLVM_EXTERNAL_PROJECTS=circt \
            -DLLVM_EXTERNAL_CIRCT_SOURCE_DIR=circt \
            -DCIRCT_BINDINGS_SWIFT_ENABLED=ON \
            -DCMAKE_BUILD_TYPE=Debug \
            -S circt/llvm/llvm \
            -B build \
            -G Ninja
          cmake \
            --build build \
            --config Debug \
            --target circt-swift-bindings-test \
            --
          build/bin/circt-swift-bindings-test

      
    